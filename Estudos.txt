React - e uma biblioteca externa que ajuda a criar websites de forma facil.
* Onde qualquer pessoa escreve o codigo fora do computador e pode ser processado no website e ser usado.
* Nao modifica se os dados directamente, cria-se um copia dos dados. 
  Exemplo: ... (ou podemos chamar de Spread Operator), leva o valor para um novo array e copia o dado dentro dele.

Existem 3 bibliotecas externas para o nosso projecto:
* React.js - que sao recursos compartilhados
* React-dom.js - contem recursos especificos para o website
* Babel - compilador do JS que traduz outras linguas dentro do JS, 
  Exemplo: '<script type="text/babel">', ai esta a traduzir todo codigo vindo do JSX


Configuracoes
* Para configurar basta colocar: 'ReactDOM.createRoot(container).render('Welcome to SuperSimpleDev React Course');'
* container e onde ficara todo codigo do react e o render serve pra mostrar alguma coisa na tela, e como se fosse 'console.log'
* JSX - e o mesmo que JS mas a diferenca e que pode se escrever o codigo html directamente, mas ele so pode ser entendido
 pelo nosso computador usando a biblioteca Babel que fara entao a traducao no Js normal.


 Componentes
 * Componentes sao pedacos ou partes de um website.
 * O componente deve iniciar sempre com letra maiuscula, funciona como PascalCase.
 * Existe outra forma de agrupar elementos sem usar a <div> atraves do Fragment = '<> e </>'

 Props = Propriedades
 * O paramentro props e um objecto e contem todos atributos dados a um determinado componente.
 * Faz os componentes serem reutilizaveis
 * Use a component (App) to create the website


 State and Event Handlers (Manipuladores de Eventos)
 * State faz o website interactivo, e igual dizer que sao dados que estao connectados ao HTML
 *  map() serve para criar um novo array a partir de um array existente, 
    chama uma funcao para cada elemento do array original
    e cria um novo array com os resultados dessa funcao
 *   salva dados quer mudam ao longo do tempo, exeemplo: um text no textbox 
 * State so atualiza depois de todo o codigo estiver concluido

Event Handlers
* Evento e um objceto que contem detalhes de um evento ou change.
*Event Handler corre a funcao quando nos interagimos com o website
* onClick e um Evento
* crypto.randomUUID() - codigo JS que cria um unico Id em String
* onChange - corre a funcao quando trocamos o texto dentro de um <input>

Tarefas
 -Save the data
 - Gerar o HTML com JS
 - Make a website interactive


 CSS
 * vh - altura da janela de visualizacao

 hooks 
 - permite inserir recursos do React em nosso componente e todo gancho comeca sempre com "use".
 Ex: React.useState()...
 - useEffect: permite executar o codigo depois que o componente e criado ou atualizado
 - useRef - permite salvbar automaticamente um elemento HTML do componente. Ref = container
            com uma caracteristica especial do React
 - ScrollTop: quao longe do topo devemos rolar.
 - ScrollHeight: a altura total do elemento.

 Proper React setup (configuracao adequada do React)
 * mkdir - cria o diretorio


 Nodejs
 - o  comando node permite executar codigo JS fora do navegador
 - npm (node package manager): e como se fosse uma biblioteca externa ou pacotes
 - react-course> creat-vite; ajuda a configurar um novo projecto React, pode ser executado assim 
   na linha do comando 'npx create-vite' x=execute. Se colocarmos no final do comando  o '@', signfica
   que vamos usar uma versao especifica
 - o npm run dev: inicara nosso novo React site 
 - vite e uma ferramenta usada para configurar e construir o nosso projecto no website, ele tambem
   cria um servidor que coloca o nosso website um uma URL

 Pastas
 * o node_modules - e onde o npm instala todos pacotes
 * src - pasta de origem que contem o codigo para o website
 * assets - contem imagens que queremos exibir no website
 * Public - contem arquivos que devem estar disponiveis ao publico
 * eslint - destaca problemas no codigo JS



Routing, Git the Ecommerce Project

Para iniciar um novo projecto com o React usando o Vite, basta digitar:
1- 'npx create-vite@6.5.0';
2- deve ir ao caminho do projecto: 'cd ecommerce-project' ;
3- instalar todos pacotes: npm install;
4- correr o projecto: 'npm run dev';

SHIFT + TAB = mover codigo a esquerda
TAB = mover codigo a direita


 5:00:45